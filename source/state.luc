module state (
    input clk,  // clock
    input rst,  // reset
    input leftBtn,
    input centBtn,
    input rightBtn,
   // input currentRow[3],
    output row1,
    output row2,
    output row3,
    output gnd1,
    output gnd2,
    output gnd3,
    output totalScore[8],
    output result[2]
    

    //output //led matrix
   // output totalScore//score

  ) {

  .clk(clk) {
    .rst(rst) {

    fsm state(#INIT(HALT)) = {MAIN,SUMUP,HALT}; // MAIN = random + propagate + compare the button and the result, sumup = add to score, halt = pause game
      main mainState;
      bcounter bttnpress;
     dff scoreSum[8];
  //  multi_seven_seg seg;
    }
    
  }
  alu myalu;
  
//  bintoAscii translater;
  sig currentRow[3]; //what row is being lighted up now?     
  sig rowResult[2]; //what is the score of each round?
 // sig score[8];     //score of the user throughout the game
  sig highscore[8]; //current High Score
//  sig out[8];   
      
  always {
    result = 8d0;
    rowResult=2b00; //rowResult is assumed to be 0 unless specified otherwise
    
    //setting up my register so I can rmb values
    scoreSum.d = scoreSum.q; 
    totalScore = scoreSum.q; //total score is the out put of score sum dff
    
    //setting up inpts of main state and button press
    mainState.left2 = leftBtn;
    mainState.right0 = rightBtn;
    mainState.center1 = centBtn;
    bttnpress.button = leftBtn;
    bttnpress.button2 = centBtn;
    bttnpress.button3 = rightBtn;
    
    //setting up alu
    myalu.a=0;
    myalu.b=0;
    myalu.alufn=0;
    
    
    //******connect main state output of row On to current row
    currentRow = mainState.rowOn;
    //instantiating outputs of state
    row1=0;
    row2=0;
    row3=0;
    gnd1=1;
    gnd2=1;
    gnd3=1; //put ground to high to deactivate the columns
   // totalScore = bttnpress.bttnPress;// this for debugging to test start game on any button press
    
    case (state.q){
      state.MAIN:
      
        //in the main state the LEDs are controlled by the main state;
         gnd1 = mainState.low1;
         gnd2 = mainState.low2;
         gnd3 = mainState.low3;
    
         row1 = mainState.high1;
         row2 = mainState.high2;
         row3 = mainState.high3;
        
        /*
        if (currentRow==RowNumb.ROW2 && mainState.result==2b01){
          rowResult = 2b01;  
          state.d = state.SUMUP;
        }
        else if (currentRow==RowNumb.ROW3 && mainState.result==2b10){
          rowResult = 2b10;  
          state.d = state.SUMUP;  
         }
        
        else if (currentRow==RowNumb.ROW3 && mainState.result==2b00){
          rowResult = 2b00;
          state.d = state.SUMUP; //miss everything dont add anything
         }
        else {
          state.d = state.MAIN; //let the light propogate down
        }
        */
        //THIS CODE STOPS THE GAME IF YOU GET SHIT WRONG
          /*
        
        else if (currentRow==RowNumb.ROW4 && mainState.result==2b00){
             rowResult==2b00;
            state.d =state.HALT; //got it wrong or missed everything //GAME OVER
          }
        */
        
              
        state.SUMUP:
      //add score of this round to the score of your game
        myalu.alufn = 6b000000;        
        myalu.a= rowResult;
        myalu.b= scoreSum.q;
        scoreSum.d = myalu.alu; //write the new score into the dff so i can store it
        
        
        //this code converts the score to something that can be outputted in seven seg LED
        /*
        seg.values[3]=11;
        result = out[0]+out[1]*2+out[2]*4+out[3]*8+out[4]*16+out[5]*32+out[6]*64+out[7]*128;
        translater.num = result;
        seg.values[2]=translater.ascii[2];
        seg.values[1]=translater.ascii[1];
        seg.values[0]=translater.ascii[0];
        score = out;
        state.d = state.MAIN;
           */

      state.HALT:
      /*
        myalu.alufn =6b110111;
        myalu.a = score;
        myalu.b = highscore;
        out = myalu.alu;
        z=myalu.z;
        v=myalu.v;
        n=myalu.n;
        //if at any point result of the main is >0, then halt the lil fucker
        if (out != 8b1){ highscore = score;}
        result = highscore[0]+highscore[1]*2+highscore[2]*4+highscore[3]*8+highscore[4]*16+highscore[5]*32+highscore[6]*64+highscore[7]*128;
        seg.values[3]=10;
        translater.num = result;
        seg.values[2]=translater.ascii[2];
        seg.values[1]=translater.ascii[1];
        seg.values[0]=translater.ascii[0];
        */
        
    row1=0;
    row2=0;
    row3=0;
    gnd1=1;
    gnd2=1;
    gnd3=1;
        if (bttnpress.bttnPress==1) { 
          //if i detect a button press i go to main state and start the game
          state.d = state.MAIN;
          }

  }
}
}