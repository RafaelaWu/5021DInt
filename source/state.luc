module state (
    input clk,  // clock
    input rst,  // reset
    input leftBtn,
    input centBtn,
    input rightBtn,
    output row1,
    output row2,
    output row3,
    output gnd1,
    output gnd2,
    output gnd3,
    output totalScore[8],
    output result[2]
  ) {

  .clk(clk) {
    .rst(rst) {

    fsm state(#INIT(HALT)) = {MAIN,HALT}; // MAIN = random + propagate + compare the button and the result, sumup = add to score, halt = pause game
      
      bcounter bttnpress;
      reg8bit scoreSum; //use an 8bit register to store the toal score of the game // i cannot use dff becuase it mojo clk constantly resets it //try connecting register to the propagtor clock cycle
      
    }
    main mainState;
    
  }
  alu myalu;
  

  always {
  //  rowResult=2b00; //rowResult is assumed to be 0 unless specified otherwise
    totalScore = scoreSum.out;
    scoreSum.data = 8b0; //am i always re-setting my register???????
    scoreSum.en=0;
    
    mainState.rst = rst;
    result = mainState.result;
    //setting up inpts of main state and button press
    mainState.left2 = leftBtn;
    mainState.right0 = rightBtn;
    mainState.center1 = centBtn;
    bttnpress.button = leftBtn;
    bttnpress.button2 = centBtn;
    bttnpress.button3 = rightBtn;
   
    //setting up alu
    myalu.a=0;
    myalu.b=0;
    myalu.alufn=0;
    
    //instantiating outputs of state
    row1=0;
    row2=0;
    row3=0;
    gnd1=1;
    gnd2=1;
    gnd3=1; //put ground to high to deactivate the columns
    
    case (state.q){
      state.MAIN:
        //in the main state the LEDs are controlled by the main state;
        
         gnd1 = mainState.low1;
         gnd2 = mainState.low2;
         gnd3 = mainState.low3;
    
         row1 = mainState.high1;
         row2 = mainState.high2;
         row3 = mainState.high3;
        
        scoreSum.en=0;
        
        if (mainState.result!=0 && mainState.rowOn==RowNumb.ROW4){
            myalu.alufn = Inst.ADD;
            myalu.a= mainState.result; //this is provided the mainstate clock has stopped
            myalu.b= scoreSum.out; //user's total score so far
            scoreSum.data = myalu.alu; //cnt new score into register input
            scoreSum.en =1;
            state.d = state.HALT; //*****TO DEBUG: GO TO HALT *****//
        } 
       

      state.HALT:

      row1=0;
      row2=0;
      row3=0;
      gnd1=1;
      gnd2=1;
      gnd3=1;
        //scoreSum.data=scoreSum.out;
        scoreSum.en=0; //dont write into my register
        if (bttnpress.bttnPress==1) { 
          mainState.rst=1;
          state.d = state.MAIN;
          }

  }
}
}